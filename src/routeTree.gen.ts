/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const LoginLazyImport = createFileRoute('/login')()
const CotizadoraDeGasLazyImport = createFileRoute('/cotizadora-de-gas')()
const AuthCargarCurvaForwardLazyImport = createFileRoute(
  '/_auth/cargar-curva-forward',
)()

// Create/Update Routes

const LoginLazyRoute = LoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const CotizadoraDeGasLazyRoute = CotizadoraDeGasLazyImport.update({
  id: '/cotizadora-de-gas',
  path: '/cotizadora-de-gas',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/cotizadora-de-gas.lazy').then((d) => d.Route),
)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthCargarCurvaForwardLazyRoute = AuthCargarCurvaForwardLazyImport.update(
  {
    id: '/cargar-curva-forward',
    path: '/cargar-curva-forward',
    getParentRoute: () => AuthRoute,
  } as any,
).lazy(() =>
  import('./routes/_auth/cargar-curva-forward.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/cotizadora-de-gas': {
      id: '/cotizadora-de-gas'
      path: '/cotizadora-de-gas'
      fullPath: '/cotizadora-de-gas'
      preLoaderRoute: typeof CotizadoraDeGasLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/cargar-curva-forward': {
      id: '/_auth/cargar-curva-forward'
      path: '/cargar-curva-forward'
      fullPath: '/cargar-curva-forward'
      preLoaderRoute: typeof AuthCargarCurvaForwardLazyImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthCargarCurvaForwardLazyRoute: typeof AuthCargarCurvaForwardLazyRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthCargarCurvaForwardLazyRoute: AuthCargarCurvaForwardLazyRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/cotizadora-de-gas': typeof CotizadoraDeGasLazyRoute
  '/login': typeof LoginLazyRoute
  '/cargar-curva-forward': typeof AuthCargarCurvaForwardLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/cotizadora-de-gas': typeof CotizadoraDeGasLazyRoute
  '/login': typeof LoginLazyRoute
  '/cargar-curva-forward': typeof AuthCargarCurvaForwardLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/cotizadora-de-gas': typeof CotizadoraDeGasLazyRoute
  '/login': typeof LoginLazyRoute
  '/_auth/cargar-curva-forward': typeof AuthCargarCurvaForwardLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/cotizadora-de-gas'
    | '/login'
    | '/cargar-curva-forward'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/cotizadora-de-gas' | '/login' | '/cargar-curva-forward'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/cotizadora-de-gas'
    | '/login'
    | '/_auth/cargar-curva-forward'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  CotizadoraDeGasLazyRoute: typeof CotizadoraDeGasLazyRoute
  LoginLazyRoute: typeof LoginLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  CotizadoraDeGasLazyRoute: CotizadoraDeGasLazyRoute,
  LoginLazyRoute: LoginLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/cotizadora-de-gas",
        "/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/cargar-curva-forward"
      ]
    },
    "/cotizadora-de-gas": {
      "filePath": "cotizadora-de-gas.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/_auth/cargar-curva-forward": {
      "filePath": "_auth/cargar-curva-forward.lazy.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
